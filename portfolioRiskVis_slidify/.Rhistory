varImpOverall <- rbind(varImp(rfBelt)$importance, varImp(rfArm)$importance, varImp(rfDumbell)$importance, varImp(rfForearm)$importance)
load("~/GitHub/pml/.RData")
.9965^20
y <- c(0.4, 0.7, 0.99)
x <- c(10, 100, 1000)
plot(x, y)
?plot
.995^20
load("~/GitHub/wle/.RData")
load("~/GitHub/pml/.RData")
load("~/GitHub/wle/.RData")
load("~/GitHub/pml/.RData")
load("~/GitHub/pml/.RData")
load("~/GitHub/pml/.RData")
college_fb_upload <- read.csv("D:/WTP/college_fb_upload.csv")
View(college_fb_upload)
getwd()
shiny::runApp()
setwd("~/GitHub/portfolioRiskVis")
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?reactive
input <- data.frame("treas" = 30.26, "tips" = 20.85, "corp" = 15.70, "us" =
11.84, "intl" = 11.56, "commod" = 9.79)
Asset <- c("Commodities","Int'l Stocks","US Stocks","Corp. Bonds","TIPS","Treasuries"
)
Volatility <- c(0.3, .2, .2, .12, .1, .07)
volDF <- data.frame(Volatility)
rownames(volDF) <- Asset
correlations <- matrix(cbind(c(1, 0.15, 0.1, 0.2, 0.1, 0.1),
c(0.15, 1, 0.7, 0.35, 0.1, 0.1),
c(0.1, 0.7, 1, 0.35, 0.1, 0.1),
c(0.2, 0.35, 0.35, 1, 0.65, 0.6),
c(0.1, 0.1, 0.1, 0.65, 1, 0.95),
c(0.1, 0.1, 0.1, 0.6, 0.95, 1)), nrow = 6)
colnames(correlations) <- Asset
rownames(correlations) <- Asset
covariances <- correlations * (Volatility %*% t(Volatility))
portfolioValue <- sum(input$commod, input$intl, input$us, input$corp,
input$tips, input$treas)
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue())
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue)
contributions <- weights * (covariances %*% weights())
contributions <- weights * (covariances %*% weights
contributions <- weights * (covariances %*% weights)
contributions <- weights * (covariances %*% weights)
contributions <- weights * (covariances %*% weights)[,1]
contributions
portfolio_variance <- sum(contributions)
portfolio_std <- sqrt(portfolio_variance)
risk_contributions <- contributions/sum(contributions)
library(ggplot2); library(scales)
risk <- data.frame(cbind(weights, Volatility, contributions))
input <- data.frame("treas" = 30.26, "tips" = 20.85, "corp" = 15.70, "us" =
11.84, "intl" = 11.56, "commod" = 9.79)
Asset <- c("Commodities","Int'l Stocks","US Stocks","Corp. Bonds","TIPS","Treasuries"
)
Volatility <- c(0.3, .2, .2, .12, .1, .07)
volDF <- data.frame(Volatility)
rownames(volDF) <- Asset
correlations <- matrix(cbind(c(1, 0.15, 0.1, 0.2, 0.1, 0.1),
c(0.15, 1, 0.7, 0.35, 0.1, 0.1),
c(0.1, 0.7, 1, 0.35, 0.1, 0.1),
c(0.2, 0.35, 0.35, 1, 0.65, 0.6),
c(0.1, 0.1, 0.1, 0.65, 1, 0.95),
c(0.1, 0.1, 0.1, 0.6, 0.95, 1)), nrow = 6)
colnames(correlations) <- Asset
rownames(correlations) <- Asset
covariances <- correlations * (Volatility %*% t(Volatility))
axisLabels <- seq(0, 1.0, .05)
portfolioValue <- sum(input$commod, input$intl, input$us, input$corp,
input$tips, input$treas)
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue)
contributions <- weights * (covariances %*% weights)[,1]
contributions
portfolio_variance <- sum(contributions)
portfolio_std <- sqrt(portfolio_variance)
risk_contributions <- contributions/sum(contributions)
risk <- data.frame(cbind(weights, Volatility, contributions))
library(ggplot2); library(scales)
ggplot(risk, aes(x = Volatility, y = weights, size = contributions,
label = Asset), guide = FALSE) +
geom_point(colour = "white", fill = "red", shape = 21)+
scale_size_area(max_size = 25, name = "Risk Contribution", labels = percent) +
scale_x_continuous(name = "Volatility \n (Annualized Return Standard Deviation)", limits = c(0, .35), labels = percent) +
scale_y_continuous(name = "Weight (%)", limits = c(0, 1), labels = percent) +
geom_text(size = 4) + theme_bw() +
ggtitle("Portfolio Risk Dynamics \n Weight, Contribution vs. Volatility")
library(ggplot2); library(scales)
ggplot(risk, aes(x = Volatility, y = weights, size = contributions,
label = Asset), guide = FALSE) +
geom_point(colour = "white", fill = "red", shape = 21)+
scale_size_area(max_size = .10, name = "Risk Contribution", labels = percent) +
scale_x_continuous(name = "Volatility \n (Annualized Return Standard Deviation)", limits = c(0, .35), labels = percent) +
scale_y_continuous(name = "Weight (%)", limits = c(0, 1), labels = percent) +
geom_text(size = 4) + theme_bw() +
ggtitle("Portfolio Risk Dynamics \n Weight, Contribution vs. Volatility")
ggplot(risk, aes(x = Volatility, y = weights, size = contributions,
label = Asset), guide = FALSE) +
geom_point(colour = "white", fill = "red", shape = 21)+
scale_size_area(max_size = 40, name = "Risk Contribution", labels = percent) +
scale_x_continuous(name = "Volatility \n (Annualized Return Standard Deviation)", limits = c(0, .35), labels = percent) +
scale_y_continuous(name = "Weight (%)", limits = c(0, 1), labels = percent) +
geom_text(size = 4) + theme_bw() +
ggtitle("Portfolio Risk Dynamics \n Weight, Contribution vs. Volatility")
input <- data.frame("treas" = 34.26, "tips" = 21.85, "corp" = 16.70, "us" =
10.84, "intl" = 10.56, "commod" = 4.79)
portfolioValue <- sum(input$commod, input$intl, input$us, input$corp,
input$tips, input$treas)
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue)
contributions <- weights * (covariances %*% weights)[,1]
contributions
portfolio_variance <- sum(contributions)
portfolio_std <- sqrt(portfolio_variance)
risk_contributions <- contributions/sum(contributions)
risk <- data.frame(cbind(weights, Volatility, contributions))
ggplot(risk, aes(x = Volatility, y = weights, size = contributions,
label = Asset), guide = FALSE) +
geom_point(colour = "white", fill = "red", shape = 21)+
scale_size_area(max_size = 40, name = "Risk Contribution", labels = percent) +
scale_x_continuous(name = "Volatility \n (Annualized Return Standard Deviation)", limits = c(0, .35), labels = percent) +
scale_y_continuous(name = "Weight (%)", limits = c(0, 1), labels = percent) +
geom_text(size = 4) + theme_bw() +
ggtitle("Portfolio Risk Dynamics \n Weight, Contribution vs. Volatility")
ggplot(risk, aes(x = Volatility, y = weights, size = contributions,
label = Asset), guide = FALSE) +
geom_point(colour = "white", fill = "red", shape = 21)+
scale_size_area(max_size = 40, name = "Risk Contribution", labels = percent) +
scale_x_continuous(name = "Volatility \n (Annualized Return Standard Deviation)", limits = c(0, .35), labels = percent) +
scale_y_continuous(name = "Weight (%)", labels = percent) +
geom_text(size = 4) + theme_bw() +
ggtitle("Portfolio Risk Dynamics \n Weight, Contribution vs. Volatility")
risk <- data.frame(cbind(weights, Volatility, risk_contributions))
ggplot(risk, aes(x = Volatility, y = weights, size = risk_contributions,
label = Asset), guide = FALSE) +
geom_point(colour = "white", fill = "red", shape = 21)+
scale_size_area(max_size = 40, name = "Risk Contribution", labels = percent) +
scale_x_continuous(name = "Volatility \n (Annualized Return Standard Deviation)", limits = c(0, .35), labels = percent) +
scale_y_continuous(name = "Weight (%)", labels = percent) +
geom_text(size = 4) + theme_bw() +
ggtitle("Portfolio Risk Dynamics \n Weight, Contribution vs. Volatility")
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
input <- data.frame("treas" = 34.26, "tips" = 21.85, "corp" = 16.70, "us" =
10.84, "intl" = 10.56, "commod" = 4.79)
Asset <- c("Commodities","Int'l Stocks","US Stocks","Corp. Bonds","TIPS","Treasuries"
)
Volatility <- c(0.3, .2, .2, .12, .1, .07)
volDF <- data.frame(Volatility)
rownames(volDF) <- Asset
correlations <- matrix(cbind(c(1, 0.15, 0.1, 0.2, 0.1, 0.1),
c(0.15, 1, 0.7, 0.35, 0.1, 0.1),
c(0.1, 0.7, 1, 0.35, 0.1, 0.1),
c(0.2, 0.35, 0.35, 1, 0.65, 0.6),
c(0.1, 0.1, 0.1, 0.65, 1, 0.95),
c(0.1, 0.1, 0.1, 0.6, 0.95, 1)), nrow = 6)
colnames(correlations) <- Asset
rownames(correlations) <- Asset
covariances <- correlations * (Volatility %*% t(Volatility))
axisLabels <- seq(0, 1.0, .05)
portfolioValue <- sum(input$commod, input$intl, input$us, input$corp,
input$tips, input$treas)
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue)
contributions <- weights * (covariances %*% weights)[,1]
contributions
portfolio_variance <- sum(contributions)
portfolio_std <- sqrt(portfolio_variance)
risk_contributions <- contributions/sum(contributions)
risk <- data.frame(cbind(weights, Volatility, risk_contributions))
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions))
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions), col = red)
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions),
col = "red")
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions),
fg="white", bg="red")
risk <- data.frame(cbind(weights, Volatility, risk_contributions))
risk <- data.frame(cbind(risk, Asset))
risk <- data.frame(cbind(weights, Volatility, risk_contributions))
risk <- data.frame(cbind(risk, Asset))
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions),
fg="white", bg="red")
text(risk$Volatility, risk$weights, risk$Asset, cex=0.5)
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions),
fg="white", bg="red")
text(risk$Volatility, risk$weights, risk$Asset, cex=1.5)
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions),
fg="white", bg="red")
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
risk_contributions
contributions
input <- data.frame("treas" = 30.26, "tips" = 20.85, "corp" = 15.70, "us" =
11.84, "intl" = 11.56, "commod" = 9.79)
Asset <- c("Commodities","Int'l Stocks","US Stocks","Corp. Bonds","TIPS","Treasuries"
)
Volatility <- c(0.3, .2, .2, .12, .1, .07)
volDF <- data.frame(Volatility)
rownames(volDF) <- Asset
correlations <- matrix(cbind(c(1, 0.15, 0.1, 0.2, 0.1, 0.1),
c(0.15, 1, 0.7, 0.35, 0.1, 0.1),
c(0.1, 0.7, 1, 0.35, 0.1, 0.1),
c(0.2, 0.35, 0.35, 1, 0.65, 0.6),
c(0.1, 0.1, 0.1, 0.65, 1, 0.95),
c(0.1, 0.1, 0.1, 0.6, 0.95, 1)), nrow = 6)
colnames(correlations) <- Asset
rownames(correlations) <- Asset
covariances <- correlations * (Volatility %*% t(Volatility))
axisLabels <- seq(0, 1.0, .05)
portfolioValue <- sum(input$commod, input$intl, input$us, input$corp,
input$tips, input$treas)
weights <- c(input$commod, input$intl, input$us, input$corp, input$tips,
input$treas)/max(1, portfolioValue)
contributions <- weights * (covariances %*% weights)[,1]
contributions
portfolio_variance <- sum(contributions)
portfolio_std <- sqrt(portfolio_variance)
risk_contributions <- contributions/sum(contributions)
risk <- data.frame(cbind(weights, Volatility, risk_contributions))
risk <- data.frame(cbind(risk, Asset))
contributions
symbols(risk$Volatility, risk$weights, circles=sqrt(risk_contributions),
fg="white", bg="red")
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
contributions
symbols(risk$Volatility, risk$weights, circles=sqrt(contributions),
fg="white", bg="red")
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
contributions
symbols(risk$Volatility, risk$weights, circles=sqrt(contributions),
fg="white", bg="red", xlim = c(0, .35), ylim = c(0, 1))
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
contributions
symbols(risk$Volatility, risk$weights, circles=sqrt(contributions),
fg="white", bg="red", xlim = c(0, .35))
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
contributions
symbols(risk$Volatility, risk$weights, circles=.1*sqrt(contributions),
fg="white", bg="red", xlim = c(0, .35))
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
contributions
symbols(risk$Volatility, risk$weights, circles=(.1*sqrt(contributions)),
fg="white", bg="red", xlim = c(0, .35))
text(risk$Volatility, risk$weights, risk$Asset, cex=1.)
contributions
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
library("shinyapps", lib.loc="~/R/win-library/3.1")
shinyapps::setAccountInfo(name='mcarlo', token='ADC97CF366048E8CEFCF14847F986994', secret='Y2WIBgyFDZk/0UzCc7J8+lUsoFcf8kgpkn/hOgCb')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
shiny::runApp('GitHub/portfolioRiskVis')
getwd()
setwd("~/GitHub/portfolioRiskVis")
runApp(display.mode = "showcase")
library("shinyapps", lib.loc="~/R/win-library/3.1")
library("shiny", lib.loc="~/R/win-library/3.1")
runApp(display.mode = "showcase")
runApp(display.mode = "showcase")
setwd("~/GitHub/)
setwd("~/GitHub)
setwd("~/GitHub")
runApp("portfolioRiskVis", mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
runApp("portfolioRiskVis", display.mode = "showcase")
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
shiny::runApp('portfolioRiskVis')
setwd("~/GitHub/empty")
setwd("~/GitHub/courses/09_DevelopingDataProducts/slidify")
setwd("~/GitHub/portfolioRiskVis")
library("slidify", lib.loc="~/R/win-library/3.1")
library("slidifyLibraries", lib.loc="~/R/win-library/3.1")
author("portfolioRiskVis_slidify")
Asset <- c("US Stocks","Int'l Stocks","Bonds","REITs","Commodities")
weights <- rep(.2, 5)
Volatility <- c(0.2, .25, .05, .25, .25)
Expected_Return <- c(0.085, .08, .02, .075, .05)
volDF <- data.frame(cbind(Volatility, Expected_Return))
rownames(volDF) <- Asset
correlations <- matrix(cbind(c(1, 0.95, 0.15, 0.85, 0.6),
c(0.95, 1, 0.3, 0.8, 0.7),
c(0.15, 0.3, 1, 0.25, 0.05),
c(0.85, 0.8, 0.25, 1, 0.45),
c(0.6, 0.7, 0.05, 0.45, 1)), nrow = 5)
colnames(correlations) <- Asset
rownames(correlations) <- Asset
covariances <- correlations * (Volatility %*% t(Volatility))
contributions <- weights * (covariances %*% weights)
variance <- sum(contributions)
risk_contributions <- contributions/variance
return_contributions <- weights * Expected_Return
portfolio_std <- sqrt(variance)
portfolio_return <- sum(return_contributions)
axisLabels <- seq(-2., 2., .2)
returnLabels <-  seq(-.10, .10, .01)
rrLabelsX <-  seq(0, 0.35, .05)
rrLabelsY <-  seq(0, 0.10, .01)
par(mfcol = c(1,3), oma = c(0.5, 5, 0.5, 0.5))
barplot(t(weights, horiz = TRUE, main = "Weight", ps = 12,
cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n",
mar = c(4, 20, 0.5, 0.5) + .1))
barplot(t(weights, horiz = TRUE, main = "Weight", ps = 12, cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n", mar = c(4, 20, 0.5, 0.5) + .1))
barplot(t(weights, horiz = TRUE, main = "Weight")#, ps = 12, cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n", mar = c(4, 20, 0.5, 0.5) + .1))
barplot(t(weights, horiz = TRUE, main = "Weight"))#, ps = 12, cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n", mar = c(4, 20, 0.5, 0.5) + .1))
barplot(t(weights), horiz = TRUE, main = "Weight")#, ps = 12, cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n", mar = c(4, 20, 0.5, 0.5) + .1))
par(mfcol = c(1,3), oma = c(0.5, 5, 0.5, 0.5))
barplot(t(weights), horiz = TRUE, main = "Weight", ps = 12, cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n", mar = c(4, 20, 0.5, 0.5) + .1)
axis(1, at = axisLabels, lab=paste0(axisLabels * 100, " %"),
las=TRUE, cex.axis=1, padj = 0.5)
axis(2, at=c(0.85,2,3.15,4.3,5.45), lab = Asset , las=TRUE, lty = 0,
ps = 12, cex.axis = 1.5)
par(mfcol = c(1,3), oma = c(0.5, 5, 0.5, 0.5))
barplot(t(weights), horiz = TRUE, main = "Weight", ps = 12, cex.main = 1.5, xaxt = "n", col = "#4F81BD", yaxt = "n", mar = c(4, 20, 0.5, 0.5) + .1)
axis(1, at = axisLabels, lab=paste0(axisLabels * 100, " %"),
las=TRUE, cex.axis=1, padj = 0.5)
axis(2, at=c(0.85,2,3.15,4.3,5.45), lab = Asset , las=TRUE, lty = 0,
ps = 12, cex.axis = 1.5)
barplot(t(risk_contributions),
main = "Risk Contribution", ps = 12, cex.main = 1.5, col = "#9BBB59", xaxt = "n",
yaxt = "n", horiz = TRUE, mar = c(4, 0.5, 0.5, 0.5) + .1)
axis(1, at = axisLabels, lab=paste0(axisLabels * 100, " %"),
las=TRUE, cex.axis=1, padj = 0.5)
barplot(t(return_contributions),
main = "Return Contribution", ps = 12, cex.main = 1.5, col = "#FF9800", xaxt = "n",
yaxt = "n", horiz = TRUE, mar = c(4, 0.5, 0.5, 0.5) + .1)
axis(1, at = returnLabels, lab=paste0(returnLabels * 100, " %"),
las=TRUE, cex.axis=1, padj = 0.5)
par(mfcol = c(1,1), oma = c(0.5, 5, 0.5, 0.5))
plot(portfolio_std, portfolio_return, pch = 19, cex = 1.5, col = "red",
xlim = c(0, .35), ylim = c(0, 0.1), xlab = "Volatility
\n (Annualized standard deviation)", xaxt = "n", ylab = "Expected Return",
yaxt = "n", main = "Portfolio Expected Return vs. Risk", ps = 12,
cex.main = 1.5, mar = c(4,14,0.5,0.5) + .1,
oma = c(4,4,0.5,0.5) + .1)
points(Volatility, Expected_Return, pch = 19)
text(Volatility[-c(2,4)], Expected_Return[-c(2,4)], labels=Asset[-c(2,4)], cex= 1., pos=2)
text(Volatility[4], Expected_Return[4], labels=Asset[4], cex= 1., pos=1)
text(Volatility[2], Expected_Return[2], labels=Asset[2], cex= 1., pos=3)
text(portfolio_std(), portfolio_return(), labels="Portfolio", cex= 1.5, col = "red", pos=4)
axis(1, at = rrLabelsX, lab=paste0(rrLabelsX * 100, " %"), las=TRUE)
axis(2, at = rrLabelsY, lab=paste0(rrLabelsY * 100, " %"), las=TRUE)
plot(portfolio_std, portfolio_return, pch = 19, cex = 1.5, col = "red",
xlim = c(0, .35), ylim = c(0, 0.1), xlab = "Volatility
\n (Annualized standard deviation)", xaxt = "n", ylab = "Expected Return",
yaxt = "n", main = "Portfolio Expected Return vs. Risk", ps = 12,
cex.main = 1.5, mar = c(4,14,0.5,0.5) + .1,
oma = c(4,4,0.5,0.5) + .1)
points(Volatility, Expected_Return, pch = 19)
text(Volatility[-c(2,4)], Expected_Return[-c(2,4)], labels=Asset[-c(2,4)], cex= 1., pos=2)
text(Volatility[4], Expected_Return[4], labels=Asset[4], cex= 1., pos=1)
text(Volatility[2], Expected_Return[2], labels=Asset[2], cex= 1., pos=3)
text(portfolio_std, portfolio_return, labels="Portfolio", cex= 1.5, col = "red", pos=4)
axis(1, at = rrLabelsX, lab=paste0(rrLabelsX * 100, " %"), las=TRUE)
axis(2, at = rrLabelsY, lab=paste0(rrLabelsY * 100, " %"), las=TRUE)
publish(title = "Portfolio Risk Visualizer", "index.html", "rpubs")
publish(title = "Portfolio Risk Visualizer", "index.html", host = "rpubs")
setwd("~/GitHub/portfolioRiskVis/portfolioRiskVis_slidify")
library("markdown", lib.loc="~/R/win-library/3.1")
publish(title = "Portfolio Risk Visualizer", "index.html", host = "rpubs")
&nbsp;&nbsp;&nbsp;&nbsp;
